<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

 

<mapper namespace="notice">
	<sql id="sql_noticeList">
		/* notice.sql_noticeList */
		SELECT
			tn.notice_seq				-- 공지사항일련
			, tn.notice_sj				-- 공지사항제목
			, tn.notice_image_cn		-- 공지사항이미지내용
			, tn.notice_cn				-- 공지사항내용 
			, LEFT(tn.regist_dt, 10) as regist_dt	-- 등록일시
		FROM tb_notice tn  
		WHERE 1 = 1 
		ORDER BY tn.regist_dt DESC 
	</sql> 

	<select id="selectNoticeSlideListPaging" parameterType="map" resultType="camelHashMap">
		/* notice.selectNoticeSlideListPaging */
		<include refid="sql_noticeList"/>
		<include refid="common.PAGING"/>
	</select>
	<select id="selectNoticeSlideListPagingCount" parameterType="map" resultType="camelHashMap">
		/* notice.selectNoticeSlideListPagingCount */
		<include refid="common.COUNT_HEAD"/>
		<include refid="sql_noticeList"/>
		<include refid="common.COUNT_FOOT"/>
	</select> 
<select id="selectNoticeSlideList" parameterType="map" resultType="camelHashMap">
		/* notice.selectNoticeListPaging */
		SELECT
		tn.notice_seq				-- 공지사항일련
		, tn.notice_sj				-- 공지사항제목
		, tn.notice_image_cn		-- 공지사항이미지내용
		, tn.notice_cn				-- 공지사항내용 
		, LEFT(tn.regist_dt, 10) as regist_dt	-- 등록일시
		FROM tb_notice tn 
		WHERE 1 = 1
		 
		ORDER BY tn.notice_seq DESC 
		LIMIT 1,9;
	</select>
	<select id="selectNoticeListPaging" parameterType="map" resultType="camelHashMap">
		/* notice.selectNoticeListPaging */
		SELECT
		tn.notice_seq				-- 공지사항일련
		, tn.notice_sj				-- 공지사항제목
		, tn.notice_image_cn		-- 공지사항이미지내용
		, tn.notice_cn				-- 공지사항내용 
		, LEFT(tn.regist_dt, 10) as regist_dt	-- 등록일시
		FROM tb_notice tn 
		WHERE 1 = 1
		<choose>
			<when test="searchDivision == 'noticeSj'">
				<if test='@com.sch.util.CommonUtil@isNotEmpty(searchText)'>
					AND (tn.notice_sj LIKE concat('%', #{searchText} , '%'))
				</if>
			</when>
			<when test="searchDivision == 'registNm'">
				<if test='@com.sch.util.CommonUtil@isNotEmpty(searchText)'>
					AND (tn.user_nm LIKE concat('%', #{searchText} , '%'))
				</if>
			</when>
			<otherwise>
				<if test='@com.sch.util.CommonUtil@isNotEmpty(searchText)'>
					AND ((tn.notice_sj LIKE concat('%', #{searchText} , '%')) OR (tn.user_nm LIKE concat('%', #{searchText} , '%')))
				</if>
			</otherwise>
		</choose>
		ORDER BY tn.notice_seq DESC 
		LIMIT 1,9;
	</select>

	<select id="selectNoticeDetail" parameterType="map" resultType="camelHashMap">
		/* notice.selectNotice */
		SELECT
			tn.notice_seq				-- 공지사항일련
			 , tn.notice_sj				-- 공지사항제목
			 , tn.notice_image_cn		-- 공지사항이미지내용
			 , tn.notice_cn				-- 공지사항내용
			 , tn.user_nm				-- 등록자 이름
			 , LEFT(tn.regist_dt, 10) as regist_dt	-- 등록일시
		FROM tb_notice tn 
		WHERE tn.notice_seq = #{noticeSeq}
	</select>

	<select id="selectPrevNotice" parameterType="map" resultType="camelHashMap">
		/* notice.selectPrevNotice */
		SELECT notice_seq
		FROM tb_notice
		WHERE notice_seq <![CDATA[<]]> (SELECT notice_seq FROM tb_notice WHERE notice_seq = #{noticeSeq})
		ORDER BY notice_seq DESC
		LIMIT 1
	</select>

	<select id="selectNextNotice" parameterType="map" resultType="camelHashMap">
		/* notice.selectNextNotice */
		SELECT notice_seq
		FROM tb_notice
		WHERE notice_seq <![CDATA[>]]> (SELECT notice_seq FROM tb_notice WHERE notice_seq = #{noticeSeq})
		ORDER BY notice_seq ASC
		LIMIT 1
	</select>

    <update id="viewsUpdt" parameterType="map">
    <!-- 조회수증가 -->
    /* notice.viewsUpdt */
    	UPDATE tb_bbs
    	SET views_co = views_co + 1
    	WHERE bbs_seq = #{bbsSeq} 
    </update>
	<insert id="insertNotice" parameterType="map">
		 
		/* notice.insertNotice */
		INSERT INTO tb_notice
		(
		notice_seq				-- 공지사항일련
		, notice_sj				-- 공지사항제목
		, notice_image_cn		-- 공지사항이미지내용
		, notice_cn				-- 공지사항내용
		, regist_id				-- 등록ID
		, regist_dt				-- 등록일시
		)
		VALUES
		(
		#{noticeSeq}
		, #{noticeSj}
		, #{noticeImageCn}
		, #{noticeCn}
		, #{user.userSeq}
		,  current_timestamp()
		)
	</insert>

	<select id="getTotalCount" parameterType="map" resultType="camelHashMap">
		SELECT COUNT(*) AS total_data FROM tb_notice
	</select>
	
	<delete id="deleteNoticeOne" parameterType="map">
	/* Notice.deleteNoticeOne*/
	DELETE FROM tb_notice
	WHERE notice_seq = #{noticeSeq}
	</delete>
</mapper>
