<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="alarm">
	<sql id="sql_AlarmList">
		/* alarm.sql_AlarmList */
		SELECT
			tam.alarm_seq,
			CASE
				WHEN tam.alarm_form = 'P' THEN '앱 푸시'
				WHEN tam.alarm_form = 'A' THEN '알림'
				WHEN tam.alarm_form = 'M' THEN '메일'
				ELSE tam.alarm_form
				END as alarm_form,
			tam.alarm_target,
			fn_codenm(tam.alarm_type) as alarm_type,
			fn_codenm(tam.alarm_category) as alarm_category,
			tam.sj,
			tam.msg,
			COUNT(tad.alarm_seq) as send_Count,
			CASE
				WHEN tam.alarm_form = 'A' THEN
					(SELECT COUNT(*)
					 FROM tb_alarm_detail tad2
					 WHERE tam.alarm_seq = tad2.alarm_seq AND tad2.check_yn = 'Y')
				ELSE 0
			END AS alarm_count,
			tam.regist_dt
		FROM tb_alarm_mastr tam
				 INNER JOIN tb_alarm_detail tad ON tam.alarm_seq = tad.alarm_seq
		WHERE 1=1
			<if test='@com.sch.util.CommonUtil@isNotEmpty(alarmCategory)'>
				AND tam.alarm_category = #{alarmCategory}
			</if>
			<if test='@com.sch.util.CommonUtil@isNotEmpty(searchText)'>
				AND (
					tam.msg LIKE concat('%', #{searchText}, '%')
					OR tam.sj LIKE concat('%', #{searchText}, '%')
				)
			</if>
		GROUP BY tam.alarm_seq, tam.regist_dt
		ORDER BY tam.regist_dt DESC
	</sql>

	<select id="selectAlarmPaging" parameterType="map" resultType="camelHashMap">
		/* alarm.selectAlarmPaging */
		<include refid="sql_AlarmList"/>
		<include refid="common.PAGING"/>
	</select>

	<select id="selectAlarmPagingCount" parameterType="map" resultType="camelHashMap">
		/* alarm.selectAlarmPagingCount */
		<include refid="common.COUNT_HEAD"/>
		<include refid="sql_AlarmList"/>
		<include refid="common.COUNT_FOOT"/>
	</select>

	<select id="selectAlarmOneDetail" parameterType="map" resultType="camelHashMap">
		/* alarm.selectAlarmOneDetail */
		SELECT
			tam.alarm_seq,
			CASE
				WHEN tam.alarm_form = 'P' THEN '앱 푸시'
				WHEN tam.alarm_form = 'A' THEN '알림'
				WHEN tam.alarm_form = 'M' THEN '메일'
				ELSE tam.alarm_form
				END as alarm_form,
			tam.alarm_target,
			fn_codenm(tam.alarm_type) as alarm_type,
			fn_codenm(tam.alarm_category) as alarm_category,
			tam.sj,
			tam.msg,
			COUNT(tad.alarm_seq) as send_Count,
			CASE
				WHEN tam.alarm_form = 'A' THEN
					(SELECT COUNT(*)
					 FROM tb_alarm_detail tad2
					 WHERE tam.alarm_seq = tad2.alarm_seq AND tad2.check_yn = 'Y')
				ELSE 0
				END AS alarm_count,
			tam.regist_dt
		FROM tb_alarm_mastr tam
				 INNER JOIN tb_alarm_detail tad ON tam.alarm_seq = tad.alarm_seq
		WHERE
			tam.alarm_seq = #{alarmSeq}
		GROUP BY tam.alarm_seq
	</select>

	<insert id="insertAlarm" parameterType="map" >
		/* alarm.insertAlarm */
		<selectKey resultType="String" keyProperty="alarmSeq" order="BEFORE">
		SELECT sch.fn_nextval('ALARM')
		</selectKey>
		INSERT INTO tb_alarm_mastr
			(
				alarm_seq
				, alarm_type
				, alarm_target
				, alarm_form
				, alarm_category
				<!-- , sj 알림에 sj없음 alarm_type으로 대체-->
				, msg
				, msg_ch
				, regist_id
				, regist_dt
			)
		VALUES
		    (
		    	#{alarmSeq}
				, #{alarmType}
				, #{alarmTarget}
				, #{alarmForm}
				, #{alarmCategory}
				<!-- , #{sj} -->
				, #{msg}
				, #{msgCh}
				, #{user.userSeq}
				, NOW()
			)
	</insert>

	<insert id="insertAlarmDetail" parameterType="map" >
		/* alarm.insertAlarmDetail */
		INSERT INTO tb_alarm_detail
			(
				 user_seq
				, alarm_seq
				, check_yn
				, regist_id
				, regist_dt
			)
		VALUES
		    (
				#{userSeq}
				, #{alarmSeq}
				, 'N'
				, #{user.userSeq}
				, NOW()
			)
	</insert>
	
	<select id="selecUserAlarm" parameterType="map" resultType="camelHashMap">
		<!-- alarm.selecUserAlarm -->
		SELECT 
			alarm_form
			,tad.user_seq
			,fn_usernm(user_seq) as user_seq_nm
			,tad.check_yn
			,tad.regist_dt
			,tam.alarm_seq
			,tam.alarm_type
			,fn_codenm(tam.alarm_type) as alarm_type_nm
			,tam.alarm_type
			,tam.alarm_category
			,fn_codenm(tam.alarm_category) as alarm_category
			,tam.sj
			,tam.msg
			,tam.msg_ch
		FROM tb_alarm_detail tad 
			LEFT JOIN tb_alarm_mastr tam ON tad.alarm_seq = tam.alarm_seq
		
		WHERE user_seq = #{userSeq} -- 특정유저의 알림함
			AND alarm_form = 'A' -- a알림 p푸시 m이메일
		<if test='@com.sch.util.CommonUtil@isNotEmpty(alarmCategory)'>
			AND alarm_category = #{alarmCategory}
		</if>
		ORDER BY tad.regist_dt DESC
	</select>
	<update id="updateUserAlarmCheck">
		update tb_alarm_detail tad
			SET check_yn = #{checkYn}
		WHERE alarm_seq = #{alarmSeq}
			AND user_seq = #{userSeq}
	</update>

	<!-- 특정시간 안에 도래할 강의 예정인 알람 조회 -->
	<select id="selectLctreReserveAlaram" parameterType="map" resultType="camelHashMap">
		/* alarm.selectLctreReserveAlaram */
		SELECT 
			tl.lctre_nm
			,(SELECT GROUP_CONCAT(tla.atnlc_user_seq) FROM tb_lctre_atnlc tla
				WHERE tla.lctre_seq = tlf.lctre_seq
				AND tla.atnlc_sttus_se in ('R','A','N')
			) as user_seq_list
			,tl.profsr_user_seq
			,fn_usernm(tl.profsr_user_seq) as profsr_user_seq_nm
			,tl.lctre_place_nm 
			,tlf.lctre_seq 
			,tlf.lctre_sn 
			,tlf.lctre_sj 
			,tlf.lctre_dtls 
		FROM tb_lctre_fx tlf
		LEFT JOIN tb_lctre tl ON tl.lctre_seq = tlf.lctre_seq 
		WHERE tl.lctre_sttus_se in ('R', 'C')
			AND tlf.use_at = 'Y'
			AND #{minGabTime} <![CDATA[<]]> TIMEDIFF( CONCAT(tlf.lctre_dt, tlf.lctre_begin_time, '00'), DATE_FORMAT(now(), '%Y%m%d%H%i00'))  -- 20230904213000
			AND TIMEDIFF( CONCAT(tlf.lctre_dt, tlf.lctre_begin_time, '00'), DATE_FORMAT(now(), '%Y%m%d%H%i00'))  <![CDATA[<=]]>  #{maxGabTime} -- 00:10:00

	</select>

	<select id="selectSeminaReserveAlaram" parameterType="map" resultType="camelHashMap">
		/* alarm.selectSeminaReserveAlaram */
		SELECT 
			ts.semina_seq
			,(SELECT GROUP_CONCAT(tsa.atnlc_user_seq) FROM tb_semina_atnlc tsa
				WHERE tsa.semina_seq = ts.semina_seq
				AND tsa.atnlc_sttus_se in ('R','A','N')
			) as user_seq_list
			,ts.semina_nm 
			,ts.semina_dc
			,ts.semina_cn
			,ts.semina_knd_code 
			,ts.progrs_user_seq
			,ts.rcrit_begin_dt 
			,ts.rcrit_end_dt 
			,ts.semina_de
			,ts.semina_begin_time
		FROM tb_semina ts
		WHERE (1=1)
			AND ts.semina_sttus_se in ('R', 'C')
			AND #{minGabTime} <![CDATA[<]]> TIMEDIFF( CONCAT(ts.semina_de, ts.semina_begin_time, '00'), DATE_FORMAT(now(), '%Y%m%d%H%i00')) 
			AND TIMEDIFF( CONCAT(ts.semina_de, ts.semina_begin_time, '00'), DATE_FORMAT(now(), '%Y%m%d%H%i00'))  <![CDATA[<=]]>  #{maxGabTime} -- 00:10:00

	</select>

	
	<select id="selectExprnReserveAlaram" parameterType="map" resultType="camelHashMap">
		/* alarm.selectExprnReserveAlaram */
		SELECT 
			te.exprn_nm
			,(SELECT GROUP_CONCAT(ter.exprn_user_seq) FROM tb_exprn_reqst ter
				WHERE ter.exprn_seq = tef.exprn_seq
				AND ter.exprn_sttus_se in ('R','A','N')
			) as user_seq_list
			,te.exprn_place_nm 
			,tef.exprn_seq 
			,tef.exprn_sn
			,tef.exprn_dt
			,tef.exprn_begin_time
			,tef.exprn_end_time
		FROM tb_exprn_fx tef
		LEFT JOIN tb_exprn te ON te.exprn_seq = tef.exprn_seq 
		WHERE (1=1)
			AND tef.use_at = 'Y'
			AND #{minGabTime} <![CDATA[<]]> TIMEDIFF( CONCAT(tef.exprn_dt, tef.exprn_begin_time, '00'), DATE_FORMAT(now(), '%Y%m%d%H%i00')) 
			AND TIMEDIFF( CONCAT(tef.exprn_dt, tef.exprn_begin_time, '00'), DATE_FORMAT(now(), '%Y%m%d%H%i00'))  <![CDATA[<=]]>  #{maxGabTime} -- 00:10:00

	</select>

	<select id="selectNoticeReserveAlaram" parameterType="map" resultType="camelHashMap">
		/* alarm.selectNoticeReserveAlaram */
		SELECT 
			te._nm
			,(SELECT GROUP_CONCAT(ter._user_seq) FROM tb__reqst ter
				WHERE ter._seq = tef._seq
				AND ter._sttus_se in ('R','A','N')
			) as user_seq_list
			,te._place_nm 
			,tef._seq 
			,tef._sn
			,tef._dt
			,tef._begin_time
			,tef._end_time
		FROM tb__fx tef
		LEFT JOIN tb_ te ON te._seq = tef._seq 
		WHERE (1=1)
			AND tef.use_at = 'Y'
			AND #{minGabTime} <![CDATA[<]]> TIMEDIFF( CONCAT(tef._dt, tef._begin_time, '00'), DATE_FORMAT(now(), '%Y%m%d%H%i00')) 
			AND TIMEDIFF( CONCAT(tef._dt, tef._begin_time, '00'), DATE_FORMAT(now(), '%Y%m%d%H%i00'))  <![CDATA[<=]]>  #{maxGabTime} -- 00:10:00

	</select>

	<!-- 매일아침, 오늘 "모집" 시작하는 강의를 조회 -->
	<select id="selectLctreRecritBegin" parameterType="map" resultType="camelHashMap">
		/* alarm.selectSeminaRecritBegin */
		SELECT 
			lctre_seq 
			,lctre_nm
			,rcrit_begin_dt 
			,rcrit_end_dt
			,atnlc_author_array
		FROM tb_lctre
		WHERE DATE_FORMAT(now(), '%Y%m%d') = DATE_FORMAT(rcrit_begin_dt, '%Y%m%d')  
			AND lctre_sttus_se in ('R', 'C');
	</select>
	
	<select id="selectSeminaRecritBegin" parameterType="map" resultType="camelHashMap">
		/* alarm.selectSeminaRecritBegin */
		SELECT 
			semina_seq 
			,semina_nm
			,semina_place_nm
			,semina_de 
			,semina_begin_time 
			,semina_end_time 
			,rcrit_begin_dt 
			,rcrit_end_dt
			,atnlc_author_array
		FROM tb_semina ts
		WHERE DATE_FORMAT(now(), '%Y%m%d') = DATE_FORMAT(rcrit_begin_dt, '%Y%m%d')  
			AND semina_sttus_se in ('R', 'C');
	</select>

	<select id="selectNoticeRecritBegin" parameterType="map" resultType="camelHashMap">
		/* alarm.selectNoticeRecritBegin */
		SELECT 
			_seq 
			,_nm
			,_place_nm
			,rcrit_begin_dt 
			,rcrit_end_dt
		FROM tb_ ts
		WHERE DATE_FORMAT(now(), '%Y%m%d') = DATE_FORMAT(rcrit_begin_dt, '%Y%m%d')  
		
	</select>
	<select id="selectExprnRecritBegin" parameterType="map" resultType="camelHashMap">
		/* alarm.selectExprnRecritBegin */
		SELECT 
			exprn_seq 
			,exprn_nm
			,exprn_place_nm
			,rcrit_begin_dt 
			,rcrit_end_dt
		FROM tb_exprn ts
		WHERE DATE_FORMAT(now(), '%Y%m%d') = DATE_FORMAT(rcrit_begin_dt, '%Y%m%d')  
		
	</select>
</mapper>